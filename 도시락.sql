DROP TABLE  IMAGE_T;
DROP TABLE  COMMENT_T;
DROP TABLE  LIKE_T;
DROP TABLE  LEAVE_USER_T;
DROP TABLE  BLOG_DETAIL_T;
DROP TABLE  KEYWORD_T;
DROP TABLE  ACCESS_HISTORY_T;
DROP TABLE  BLOG_INFO_T;
DROP TABLE  USER_T;

CREATE TABLE USER_T (
	USER_NO	        NUMBER	            NOT NULL,
	EMAIL	        VARCHAR2(100 BYTE)	NOT NULL UNIQUE,
	PW	            VARCHAR2(64 BYTE)	NULL,
	NAME	        VARCHAR2(100 BYTE)	NULL,
	MOBILE	        VARCHAR2(20 BYTE)	NULL,
	SIGNUP_KIND	    NUMBER	            NULL,
	GENDER	        VARCHAR2(10 BYTE)   NULL,
	SIGUNUP_DT	    DATE	            NULL,
	PW_MODIFY_DT	DATE	            NULL,
    CONSTRAINT PK_USER PRIMARY KEY (USER_NO)
);

CREATE TABLE BLOG_INFO_T (
	BLOG_NO	        NUMBER	            NOT NULL,
	USER_NO	        NUMBER	            NOT NULL,
	BLOG_CONTENTS	VARCHAR2(100 BYTE)	NULL,
	BLOG_IMG_PATH	VARCHAR2(100 BYTE)	NULL,
	NICKNAME	    VARCHAR2(100 BYTE)	NULL,
    CONSTRAINT PK_BLOG_INFO PRIMARY KEY (BLOG_NO),
    CONSTRAINT FK_BLOG_INFO_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_T (USER_NO)
);

CREATE TABLE ACCESS_HISTORY_T (
	ACCESS_HISTORY_NO	NUMBER	            NOT NULL,
	USER_NO	            NUMBER	            NOT NULL,
	EMAIL	            VARCHAR2 (100 BYTE)	NULL UNIQUE,
	IP	                VARCHAR2(50 BYTE)	NULL,
	USER_AGENT	        VARCHAR2(150 BYTE)	NULL,
	SESSION_ID	        VARCHAR2(32 BYTE)	NULL,
	SIGNIN_DT	        DATE	            NULL,
    CONSTRAINT PK_ACCESS_HISTORY PRIMARY KEY (ACCESS_HISTORY_NO),
    CONSTRAINT FK_ACCESS_HISTORY_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_T (USER_NO)
);

CREATE TABLE KEYWORD_T (
	KEYWORD_NO	    NUMBER	            NOT NULL,
	KEYWORD_NAME	VARCHAR2(100 BYTE)	NULL,
    CONSTRAINT PK_KEYWORD PRIMARY KEY (KEYWORD_NO)
);

CREATE TABLE BLOG_DETAIL_T (
	BLOG_LIST_NO	NUMBER	             NOT NULL,
	BLOG_NO	        NUMBER	             NOT NULL,
	KEYWORD_NO	    NUMBER	             NOT NULL,
	TITLE	        VARCHAR2(1000 BYTE) NOT NULL,
	CONTENTS	    CLOB	             NULL,
	CREATE_DT	    DATE	             NULL,
	MODIFY_DT	    DATE	             NULL,
    CONSTRAINT PK_BLOG_DETAIL PRIMARY KEY (BLOG_LIST_NO),
    CONSTRAINT FK_BLOG_DETAIL_BLOG_INFO FOREIGN KEY (BLOG_NO)
        REFERENCES BLOG_INFO_T (BLOG_NO),
    CONSTRAINT FK_BLOG_DETAIL_KEYWORD FOREIGN KEY (KEYWORD_NO)
        REFERENCES KEYWORD_T (KEYWORD_NO)
);

CREATE TABLE LEAVE_USER_T (
	LEAVE_USER_NO	NUMBER	            NOT NULL,
	EMAIL	        VARCHAR2(100 BYTE)	NOT NULL UNIQUE,
	LEAVE_DT	    DATE	            NULL,
    CONSTRAINT PK_LEAVE_USER PRIMARY KEY (LEAVE_USER_NO)
);

CREATE TABLE LIKE_T (
	LIKE_NO	        NUMBER	NOT NULL,
	BLOG_LIST_NO	NUMBER	NOT NULL,
	USER_NO	        NUMBER	NOT NULL UNIQUE,
    CONSTRAINT PK_LIKE PRIMARY KEY (LIKE_NO),
    CONSTRAINT FK_LIKE_BLOG_DETAIL FOREIGN KEY (BLOG_LIST_NO)
        REFERENCES BLOG_DETAIL_T (BLOG_LIST_NO),
    CONSTRAINT FK_LIKE_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_T (USER_NO)
);

CREATE TABLE COMMENT_T (
	COMMENT_NO	    NUMBER	            NOT NULL,
	BLOG_LIST_NO	NUMBER	            NOT NULL,
	USER_NO	        NUMBER	            NULL,
	CONTENTS	    VARCHAR2(4000 BYTE)	NOT NULL,
	CREATE_DT	    DATE	            NULL,
	STATE	        NUMBER	            NULL,
	DEPTH	        NUMBER	            NULL,
	GROUP_NO	    NUMBER	            NULL,
    CONSTRAINT PK_COMMENT PRIMARY KEY (COMMENT_NO),
    CONSTRAINT FK_COMMENT_BLOG_DETAIL FOREIGN KEY (BLOG_LIST_NO)
        REFERENCES BLOG_DETAIL_T (BLOG_LIST_NO),
    CONSTRAINT FK_COMMENT_USER FOREIGN KEY (USER_NO)
        REFERENCES USER_T (USER_NO)
);

CREATE TABLE IMAGE_T (
	IMAGE_NO	    NUMBER	            NOT NULL,
	BLOG_LIST_NO	NUMBER	            NOT NULL,
	FILESYSTEM_NAME	VARCHAR2(500 BYTE)	NOT NULL,
	UPLOAD_PATH	    VARCHAR2(500 BYTE)	NOT NULL,
    CONSTRAINT PK_IMAGE_T PRIMARY KEY (IMAGE_NO),
    CONSTRAINT FK_IMAGE_BLOG_DETAIL FOREIGN KEY (BLOG_LIST_NO)
        REFERENCES BLOG_DETAIL_T (BLOG_LIST_NO)
);